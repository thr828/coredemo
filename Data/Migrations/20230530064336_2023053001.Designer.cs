// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20230530064336_2023053001")]
    partial class _2023053001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("T_ArticleS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cfb10e8b-66ac-4fd6-ac13-9febef9d680f"),
                            Author = "jack",
                            CreateTime = new DateTime(2023, 5, 30, 14, 43, 36, 141, DateTimeKind.Local).AddTicks(3548),
                            CreateUser = "admin",
                            Description = "crm",
                            Title = "迅达crm",
                            UpdateTime = new DateTime(2023, 5, 30, 14, 43, 36, 141, DateTimeKind.Local).AddTicks(3557),
                            UpdateUser = "admin",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("24d3dd6a-5b98-4370-b18f-d237bc565909"),
                            Author = "jimmiy",
                            CreateTime = new DateTime(2023, 5, 30, 14, 43, 36, 141, DateTimeKind.Local).AddTicks(3582),
                            CreateUser = "admin",
                            Description = "efrqc",
                            Title = "efrqc",
                            UpdateTime = new DateTime(2023, 5, 30, 14, 43, 36, 141, DateTimeKind.Local).AddTicks(3583),
                            UpdateUser = "admin",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("7d07c8a5-8b6d-484c-9a98-d5daf0caf46c"),
                            Author = "rock",
                            CreateTime = new DateTime(2023, 5, 30, 14, 43, 36, 141, DateTimeKind.Local).AddTicks(3584),
                            CreateUser = "admin",
                            Description = "tuoxin",
                            Title = "tuoxin",
                            UpdateTime = new DateTime(2023, 5, 30, 14, 43, 36, 141, DateTimeKind.Local).AddTicks(3585),
                            UpdateUser = "admin",
                            Version = 0
                        },
                        new
                        {
                            Id = new Guid("e7ac03aa-f212-47f7-b7a4-85aaf9a5866b"),
                            Author = "john",
                            CreateTime = new DateTime(2023, 5, 30, 14, 43, 36, 141, DateTimeKind.Local).AddTicks(3586),
                            CreateUser = "admin",
                            Description = "good",
                            Title = "good",
                            UpdateTime = new DateTime(2023, 5, 30, 14, 43, 36, 141, DateTimeKind.Local).AddTicks(3587),
                            UpdateUser = "admin",
                            Version = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Comment", b =>
                {
                    b.HasOne("Domain.Entities.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId");

                    b.Navigation("Article");
                });
#pragma warning restore 612, 618
        }
    }
}
